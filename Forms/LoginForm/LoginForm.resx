<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAe1JREFUaEPtlk8oBFEcx5dyVezOyAoz/tzkgquSi5uDHNXWzixOLtotFwnlpGTf
        KycOTm4ue5F9E1FOCjk5uArFPHsePX+Kn8es3ff0Ru9Tn8s09ft+msvEYhqNRvOv6MjTYRvTTQv7eyK1
        kV+wEF1uXS8l4U3hWJgu2ZgGUkX03kalAXhbGG9f4uthCVqIXvVtBHVwgxBs5G/BgzK18v4g3CAEC/n7
        8JhMLfw0ATcIwUY+gcdk2p5/TMENQtAhFapDwtAhFdqyeI2MjDf+Sbc4Fs+Q/th8UAv3lc1fhzTnzgPD
        9bgmXO/CTB/0wo1loVLIS4xDbpqmjky4MxTVQl50yALcGYqiIQW4MxQlQ1yPwJ2h6JAKbZ49haN5Kh6S
        fwzM6UM4mqfaIcm5Szj4O9UMaV+9DZLZMzj2J8WEWMi/6cSlvjb80PBu08xJypw6DH6rMXkAR5Zj9SEs
        ogPTHvje6z/Rl4OyrC7kuwhGZEJ+imBEIiQsgqF+CKY7YREM5UO61u7q4TMeplMc5RyU5e9DyiUx6XVz
        DspSXgjDcMgu56gM5YbUp48b2RHOYdHKDXklqIlnvCHD9bIJl6xUo+GSbU7EX4WIxXC83L8IYXBiohnC
        ADHRDWF8iIl2COMtJvohDCNDRuAzjUajiSbPyrr47YSTL3oAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAL9mFQC/ZhUFv2YVA79mFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADAZBUAwGQVC8BlFVzAZRUcwGUVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwGQVAMBkFQzAZRV9wGUV0MBlFSfAZRUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBkFQDAYxUKwGUVfMBlFfTAZRXcwGUVJsBlFQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAZhMAwGkMAMBmFBS/ZRQqv2UULb9l
        FC2/ZRQtv2UULb9lFC2/ZRQtv2UULb9lFC2/ZRQtv2UUL8BlFYHAZRXywGUV/8BlFdvAZRUmwGUVAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwWMTAMJhEQPAZRVQwGUVu8Bl
        FdbAZRXYwGUV2MBlFdjAZRXYwGUV2MBlFdjAZRXYwGUV2MBlFdjAZRXbwGUV9cBlFf/AZRX/wGUV28Bl
        FSbAZRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAZRUAwGUVKsBl
        FdrAZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8Bl
        Ff/AZRXbwGUVJsBlFQAAAAAAAAAAAAAAAAAAAAAA8pUiAPKVIgjylSIT////APSXJQAAAAAAAAAAAMFl
        FQDAZRVTwGUV+cBlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8Bl
        Ff/AZRX/wGUV/8BlFdvAZRUmwGUVAAAAAAAAAAAAAAAAAAAAAADylSEA8pUhJPKVIZHylSAl8pUgAAAA
        AAAAAAAAwGQVAMBmFV3AZRX6wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8Bl
        Ff/AZRX/wGUV/8BlFf/AZRX/wGUV28BlFSbAZRUAAAAAAAAAAAAAAAAAAAAAAPKVIQDylSEm85Yh3PKV
        ILTylSEk8JMfAPSXIwDAZBUAwGYVXMBlFfrAZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8Bl
        Ff/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRXbwGUVJsBlFQAAAAAAAAAAAAAAAAAAAAAA8pUhAPKV
        ISbzliHc85Yh//OWIbTylSAj8pUgAMFkFgC+ZBRav2QV+r9kFf+/ZBX/v2QV/79kFf+/ZBX/v2QV/79k
        Ff+/ZBX/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV/8BlFdvAZRUmwGUVAAAAAAAAAAAAAAAAAAAA
        AADylSEA8pUhJvOWIdvzliH/85Yh/vOVIbbzliFb9JchVN6CHJPRdRn80XUZ/9F1Gf/RdRn/0XUZ/9F1
        Gf/RdRn/0XUZ/9B0Gf/JbRf/wWYV/8BlFf/AZRX/wGUV/8BlFf/AZRX/wGUV28BlFSbAZRUAAAAAAAAA
        AAAAAAAAAAAAAPKVIQDylSEm85Yh2/OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh/+uOH//QdBn/wGUV/8BlFf/AZRX/wGUV/8BlFf/AZRXbwGUVJsBl
        FQAAAAAAAAAAAAAAAAAAAAAA8pUhAPKVISbzliHb85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/9Jch/+aKHv/DaBb/wGUV/8BlFf/AZRX/wGUV/8Bl
        FdvAZRUmwGUVAAAAAAAAAAAAAAAAAAAAAADylSEA8pUhJvOWIdvzliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/0lyH/6o4f/8hsF//AZRX/wGUV/8Bl
        Ff/AZRX/wGUV28BlFSbAZRUAAAAAAAAAAAAAAAAAAAAAAPKVIQDylSEm85Yh2/OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//SXIf/rjh//yGwX/8Bl
        Ff/AZRX/wGUV/8BlFf/AZRXawGUVJcBlFQAAAAAAAAAAAAAAAAAAAAAA8pUhAPKVISbzliHb85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/9Jch/+uO
        H//IbBf/wGUV/8BlFf/AZRX/wGUV/8BlFbu/ZBUWv2QVAAAAAAAAAAAAAAAAAAAAAADylSEA8pUhJvOW
        IdvzliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/0lyH/644f/shtF/vAZRX6wGUV+sBlFfrAZRXZwGQUTwAAAADEZxcAAAAAAAAAAAAAAAAAAAAAAPKV
        IQDylSEm85Yh2/OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/wkyDl0XUYdb9lFVvAZhVcv2UVVMFlFCnGZBYDxWMXAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA8pUhAPKVISbzliHb85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIdbylB8o8pQfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADylSEA8pUhJvOWIdvzliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh1vGUHyjxlB8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPKVIQDylSEm85Yh2/OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHW8ZQfKPGUHwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8pUgAPKVICPzliHV85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIdLzlSAi85UgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADylSEA8pUhDfOWIaDzliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85UgovSV
        Igj0lSMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPeQJgDylx8A85YgKfOW
        IaDzliHW85Yh2vOWIdrzliHa85Yh2vOWIdrzliHa85Yh2vOWIdrzliHa85Yh2vOWIdrzliHa85Yh1POW
        IaH0lSEp8pUhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOT
        IwDz/wAA85UiDvKWICPyliAl8pYgJfKWICXyliAl8pYgJfKWICXyliAl8pYgJfKWICXyliAl8pYgJfKW
        ICXylSEi85UfDe2bKwD9iw0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////5////8f///+H////B//wAAf/wAAH/8AAB+fA
        AAfjwAAH4cAAB+DAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAP4AAAD+AAAf/gAAH/4AAB/+AA
        Af/gAAH/8AAD//gAB/////////////////8=
</value>
  </data>
</root>